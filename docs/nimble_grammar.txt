literal ::= '\"' .* '\"' | .* ';' | .*\n

mode :: '&'

modifier ::= '$'

redirect_input ::= '<'

redirect_output ::= '>' | '>&' | '>!' | '>&!' | '>>' | '>>&'

redirect_pipe ::= '|'

symbol ::= ';' | '(' | ')' | '!'

---

#
# command -[options] [arguments] < input file > output file 
# ---
# >	Redirect standard output
# >&	Redirect standard output and standard error
# <	Redirect standard input
# >!	Redirect standard output; overwrite file if it exists
# >&!	Redirect standard output and standard error; overwrite file if it exists
# |	Redirect standard output to another command (pipe)
# >>	Append standard output
# >>&	Append standard output and standard error
#

statement ::= <command_0> <mode>?

argument ::= (<modifier> <literal>)
	| <literal>

command_0 ::= <command_1> <command_0p>*

command_0p ::= <<redirect_input>> <command_1> <command_0p>*

command_1 ::= <command_2> <command_1p>*

command_1p ::= <redirect_output> <command_2> <command_1p>*

command_2 ::= <command_3> <command_2p>*

command_2p ::= <redirect_pipe> <command_3> <command_2p>*

command_3 ::= '(' <command_0> ')'
	| <command_call_list>
	| <modifier> <literal>

command_call ::= <literal> <argument>*

command_call_list ::= <command_call> (';' <command_call_list>)*
